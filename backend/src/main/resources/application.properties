server.port=${PORT:5000}
server.servlet.context-path=/api

# For PostgreSQL
spring.datasource.url=${GW_DB_URL:jdbc:postgresql://ec2-54-163-226-238.compute-1.amazonaws.com:5432/d4riqei6arv6ct?user=xmfciwevjqywpy&password=318ce678e95cbe259f9a11bfd8657dfdb2a5d9ee719b84f98c0cd354a415b0c4&sslmode=require}
spring.datasource.username=${GW_DB_USERNAME:xmfciwevjqywpy}
spring.datasource.password=${GW_DB_PASSWORD:318ce678e95cbe259f9a11bfd8657dfdb2a5d9ee719b84f98c0cd354a415b0c4}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


# For H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always


#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.maxActive=10
#spring.datasource.maxIdle=5
#spring.datasource.minIdle=2
#spring.datasource.initialSize=5
#spring.datasource.removeAbandoned=true
